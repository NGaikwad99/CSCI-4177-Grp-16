{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS-\\\\Desktop\\\\groupProjectAhmed\\\\csci-4177-grp-16\\\\src\\\\components\\\\MeetingScheduler.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Calendar } from 'react-calendar';\nimport { format, isBefore, startOfDay } from 'date-fns';\nimport '../styles/MeetingScheduler.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MeetingScheduler() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const userType = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.userType) || \"Therapist\";\n  const [showPrompt, setShowPrompt] = useState(false);\n  const [selectedPerson, setSelectedPerson] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedType, setSelectedType] = useState('');\n  const [meetings, setMeetings] = useState([]);\n  const [visibleMeetings, setVisibleMeetings] = useState({});\n  const [availableDates, setAvailableDates] = useState([]);\n  const [allDatesAllowed, setAllDatesAllowed] = useState(true);\n  const [rescheduleMeeting, setRescheduleMeeting] = useState(null);\n  const mockPatients = [\"Jon Snow\", \"Jack Bauer\", \"Jessica Lannister\"];\n  const mockTherapists = [\"Dr. Strange\", \"Dr. Who\", \"Dr. House\"];\n  useEffect(() => {\n    // Mock fetching meetings from the backend\n    const mockMeetings = [{\n      date: '2024-07-10',\n      person: 'Jon Snow',\n      type: 'One-on-One Meeting'\n    }, {\n      date: '2024-07-15',\n      person: 'Jack Bauer',\n      type: 'Impromptu Meeting'\n    }];\n    setMeetings(mockMeetings);\n  }, []);\n  const handleScheduleClick = () => {\n    setShowPrompt(true);\n    setRescheduleMeeting(null);\n  };\n  const handleClosePrompt = () => {\n    setShowPrompt(false);\n    setSelectedPerson('');\n    setSelectedDate(new Date());\n    setSelectedType('');\n    setAllDatesAllowed(true);\n    setRescheduleMeeting(null);\n  };\n  const handlePersonChange = event => {\n    const personId = event.target.value;\n    setSelectedPerson(personId);\n    if (personId === \"Jon Snow\") {\n      setAvailableDates(['2024-07-10', '2024-07-19']);\n      setAllDatesAllowed(false);\n    } else {\n      setAvailableDates([]);\n      setAllDatesAllowed(true);\n    }\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const handleDateRadioChange = event => {\n    const date = new Date(event.target.value);\n    setSelectedDate(date);\n  };\n  const handleTypeChange = event => {\n    setSelectedType(event.target.value);\n  };\n  const handleScheduleMeeting = () => {\n    const today = startOfDay(new Date());\n    if (isBefore(selectedDate, today)) {\n      alert('Cannot book an appointment in the past.');\n      return;\n    }\n    if (selectedPerson === \"Jon Snow\" && !availableDates.includes(format(selectedDate, 'yyyy-MM-dd'))) {\n      alert('Jon Snow is only available on specific dates.');\n      return;\n    }\n    const formattedDate = format(selectedDate, 'yyyy-MM-dd');\n    const existingMeeting = meetings.find(meeting => meeting.date === formattedDate && meeting.person === selectedPerson);\n    if (existingMeeting) {\n      alert('A meeting with this person is already booked on this date.');\n      return;\n    }\n    const newMeeting = {\n      date: formattedDate,\n      person: selectedPerson,\n      type: selectedType\n    };\n    setMeetings([...meetings, newMeeting]);\n    handleClosePrompt();\n    alert('Meeting successfully booked!');\n  };\n  const handleRescheduleMeeting = () => {\n    const today = startOfDay(new Date());\n    if (isBefore(selectedDate, today)) {\n      alert('Cannot reschedule to a past date.');\n      return;\n    }\n    if (selectedPerson === \"Jon Snow\" && !availableDates.includes(format(selectedDate, 'yyyy-MM-dd'))) {\n      alert('Jon Snow is only available on specific dates.');\n      return;\n    }\n    const formattedDate = format(selectedDate, 'yyyy-MM-dd');\n    setMeetings(meetings.map(meeting => meeting.date === rescheduleMeeting.date && meeting.person === rescheduleMeeting.person ? {\n      ...meeting,\n      date: formattedDate\n    } : meeting));\n    handleClosePrompt();\n    alert('Meeting successfully rescheduled!');\n  };\n  const handleLoadMore = date => {\n    setVisibleMeetings(prev => ({\n      ...prev,\n      [date]: (prev[date] || 2) + 2\n    }));\n  };\n  const getMeetingsForSelectedDate = date => {\n    const formattedDate = format(date, 'yyyy-MM-dd');\n    return meetings.filter(meeting => meeting.date === formattedDate);\n  };\n  const tileDisabled = ({\n    date,\n    view\n  }) => {\n    if (isBefore(startOfDay(date), startOfDay(new Date()))) {\n      return true;\n    }\n    if (selectedPerson === \"Jon Snow\" && view === 'month') {\n      const formattedDate = format(date, 'yyyy-MM-dd');\n      return !availableDates.includes(formattedDate);\n    }\n    return false;\n  };\n  const tileContent = ({\n    date,\n    view\n  }) => {\n    if (view === 'month') {\n      const formattedDate = format(date, 'yyyy-MM-dd');\n      const meetingExists = meetings.some(meeting => meeting.date === formattedDate);\n      if (meetingExists) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 24\n        }, this);\n      }\n    }\n    return null;\n  };\n  const handleReschedule = meeting => {\n    setSelectedPerson(meeting.person);\n    setSelectedDate(new Date(meeting.date));\n    setSelectedType(meeting.type);\n    setRescheduleMeeting(meeting);\n    setShowPrompt(true);\n  };\n  const handleCancel = date => {\n    setMeetings(meetings.filter(meeting => meeting.date !== date));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-cont\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: showPrompt ? 'blurred-background' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meeting-scheduler\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-con\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Meeting Scheduler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Schedule and manage your meetings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar\",\n        children: /*#__PURE__*/_jsxDEV(Calendar, {\n          onChange: handleDateChange,\n          value: selectedDate,\n          className: \"custom-calendar\",\n          tileDisabled: tileDisabled,\n          tileContent: tileContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upcoming\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upcomingMeetingsGrid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headerTextUpcoming\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"headerUpcoming\",\n            children: [\"Meetings on \", format(selectedDate, 'yyyy-MM-dd')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), getMeetingsForSelectedDate(selectedDate).slice(0, visibleMeetings[selectedDate] || 2).map((meeting, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meeting\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: meeting.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: meeting.person\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: meeting.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleReschedule(meeting),\n            children: \"Reschedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCancel(meeting.date),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this)), getMeetingsForSelectedDate(selectedDate).length > 2 && (visibleMeetings[selectedDate] || 2) < getMeetingsForSelectedDate(selectedDate).length && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"loadMoreButton\",\n          onClick: () => handleLoadMore(selectedDate),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"textButton\",\n            children: \"Load More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"scheduleButton\",\n          onClick: handleScheduleClick,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"textButton\",\n            children: \"Schedule a Meeting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), showPrompt && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prompt\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Schedule a Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"oneOnOne\",\n          name: \"meetingType\",\n          value: \"One-on-One Meeting\",\n          onChange: handleTypeChange,\n          checked: selectedType === 'One-on-One Meeting'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"oneOnOne\",\n          children: \"One-on-One\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"impromptu\",\n          name: \"meetingType\",\n          value: \"Impromptu Meeting\",\n          onChange: handleTypeChange,\n          checked: selectedType === 'Impromptu Meeting'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"impromptu\",\n          children: \"Impromptu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handlePersonChange,\n        value: selectedPerson,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: [\"Select \", userType === 'Therapist' ? 'Patient' : 'Therapist']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }, this), userType === 'Therapist' ? mockPatients.map((patient, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: patient,\n          children: patient\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }, this)) : mockTherapists.map((therapist, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: therapist,\n          children: therapist\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }, this), selectedPerson && !allDatesAllowed && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [selectedPerson, \" is only available on these dates below:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: availableDates.map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: date,\n              name: \"date\",\n              value: date,\n              onChange: handleDateRadioChange,\n              checked: format(selectedDate, 'yyyy-MM-dd') === date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: date,\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }, this), selectedPerson && allDatesAllowed && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select any available date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n          onChange: handleDateChange,\n          value: selectedDate,\n          className: \"custom-calendar\",\n          tileDisabled: tileDisabled,\n          tileContent: tileContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }, this), rescheduleMeeting ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRescheduleMeeting,\n        children: \"Reschedule Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleScheduleMeeting,\n        children: \"Schedule a meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClosePrompt,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n}\n_s(MeetingScheduler, \"0C0cjdMW0PvltMifXsbdtEquoL4=\", false, function () {\n  return [useLocation];\n});\n_c = MeetingScheduler;\nexport default MeetingScheduler;\nvar _c;\n$RefreshReg$(_c, \"MeetingScheduler\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Calendar","format","isBefore","startOfDay","jsxDEV","_jsxDEV","MeetingScheduler","_s","_location$state","location","userType","state","showPrompt","setShowPrompt","selectedPerson","setSelectedPerson","selectedDate","setSelectedDate","Date","selectedType","setSelectedType","meetings","setMeetings","visibleMeetings","setVisibleMeetings","availableDates","setAvailableDates","allDatesAllowed","setAllDatesAllowed","rescheduleMeeting","setRescheduleMeeting","mockPatients","mockTherapists","mockMeetings","date","person","type","handleScheduleClick","handleClosePrompt","handlePersonChange","event","personId","target","value","handleDateChange","handleDateRadioChange","handleTypeChange","handleScheduleMeeting","today","alert","includes","formattedDate","existingMeeting","find","meeting","newMeeting","handleRescheduleMeeting","map","handleLoadMore","prev","getMeetingsForSelectedDate","filter","tileDisabled","view","tileContent","meetingExists","some","className","fileName","_jsxFileName","lineNumber","columnNumber","handleReschedule","handleCancel","children","onChange","slice","index","onClick","length","id","name","checked","htmlFor","patient","therapist","_c","$RefreshReg$"],"sources":["C:/Users/ASUS-/Desktop/groupProjectAhmed/csci-4177-grp-16/src/components/MeetingScheduler.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Calendar } from 'react-calendar';\r\nimport { format, isBefore, startOfDay } from 'date-fns';\r\nimport '../styles/MeetingScheduler.css';\r\n\r\nfunction MeetingScheduler() {\r\n    const location = useLocation();\r\n    const userType = location.state?.userType || \"Therapist\";\r\n    const [showPrompt, setShowPrompt] = useState(false);\r\n    const [selectedPerson, setSelectedPerson] = useState('');\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [selectedType, setSelectedType] = useState('');\r\n    const [meetings, setMeetings] = useState([]);\r\n    const [visibleMeetings, setVisibleMeetings] = useState({});\r\n    const [availableDates, setAvailableDates] = useState([]);\r\n    const [allDatesAllowed, setAllDatesAllowed] = useState(true);\r\n    const [rescheduleMeeting, setRescheduleMeeting] = useState(null);\r\n\r\n    const mockPatients = [\"Jon Snow\", \"Jack Bauer\", \"Jessica Lannister\"];\r\n    const mockTherapists = [\"Dr. Strange\", \"Dr. Who\", \"Dr. House\"];\r\n\r\n    useEffect(() => {\r\n        // Mock fetching meetings from the backend\r\n        const mockMeetings = [\r\n            { date: '2024-07-10', person: 'Jon Snow', type: 'One-on-One Meeting' },\r\n            { date: '2024-07-15', person: 'Jack Bauer', type: 'Impromptu Meeting' }\r\n        ];\r\n        setMeetings(mockMeetings);\r\n    }, []);\r\n\r\n    const handleScheduleClick = () => {\r\n        setShowPrompt(true);\r\n        setRescheduleMeeting(null);\r\n    };\r\n\r\n    const handleClosePrompt = () => {\r\n        setShowPrompt(false);\r\n        setSelectedPerson('');\r\n        setSelectedDate(new Date());\r\n        setSelectedType('');\r\n        setAllDatesAllowed(true);\r\n        setRescheduleMeeting(null);\r\n    };\r\n\r\n    const handlePersonChange = (event) => {\r\n        const personId = event.target.value;\r\n        setSelectedPerson(personId);\r\n\r\n        if (personId === \"Jon Snow\") {\r\n            setAvailableDates(['2024-07-10', '2024-07-19']);\r\n            setAllDatesAllowed(false);\r\n        } else {\r\n            setAvailableDates([]);\r\n            setAllDatesAllowed(true);\r\n        }\r\n    };\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    const handleDateRadioChange = (event) => {\r\n        const date = new Date(event.target.value);\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    const handleTypeChange = (event) => {\r\n        setSelectedType(event.target.value);\r\n    };\r\n\r\n    const handleScheduleMeeting = () => {\r\n        const today = startOfDay(new Date());\r\n\r\n        if (isBefore(selectedDate, today)) {\r\n            alert('Cannot book an appointment in the past.');\r\n            return;\r\n        }\r\n\r\n        if (selectedPerson === \"Jon Snow\" && !availableDates.includes(format(selectedDate, 'yyyy-MM-dd'))) {\r\n            alert('Jon Snow is only available on specific dates.');\r\n            return;\r\n        }\r\n\r\n        const formattedDate = format(selectedDate, 'yyyy-MM-dd');\r\n        const existingMeeting = meetings.find(meeting => meeting.date === formattedDate && meeting.person === selectedPerson);\r\n\r\n        if (existingMeeting) {\r\n            alert('A meeting with this person is already booked on this date.');\r\n            return;\r\n        }\r\n\r\n        const newMeeting = {\r\n            date: formattedDate,\r\n            person: selectedPerson,\r\n            type: selectedType\r\n        };\r\n\r\n        setMeetings([...meetings, newMeeting]);\r\n        handleClosePrompt();\r\n        alert('Meeting successfully booked!');\r\n    };\r\n\r\n    const handleRescheduleMeeting = () => {\r\n        const today = startOfDay(new Date());\r\n\r\n        if (isBefore(selectedDate, today)) {\r\n            alert('Cannot reschedule to a past date.');\r\n            return;\r\n        }\r\n\r\n        if (selectedPerson === \"Jon Snow\" && !availableDates.includes(format(selectedDate, 'yyyy-MM-dd'))) {\r\n            alert('Jon Snow is only available on specific dates.');\r\n            return;\r\n        }\r\n\r\n        const formattedDate = format(selectedDate, 'yyyy-MM-dd');\r\n\r\n        setMeetings(meetings.map(meeting => meeting.date === rescheduleMeeting.date && meeting.person === rescheduleMeeting.person ? { ...meeting, date: formattedDate } : meeting));\r\n        handleClosePrompt();\r\n        alert('Meeting successfully rescheduled!');\r\n    };\r\n\r\n    const handleLoadMore = (date) => {\r\n        setVisibleMeetings(prev => ({\r\n            ...prev,\r\n            [date]: (prev[date] || 2) + 2\r\n        }));\r\n    };\r\n\r\n    const getMeetingsForSelectedDate = (date) => {\r\n        const formattedDate = format(date, 'yyyy-MM-dd');\r\n        return meetings.filter(meeting => meeting.date === formattedDate);\r\n    };\r\n\r\n    const tileDisabled = ({ date, view }) => {\r\n        if (isBefore(startOfDay(date), startOfDay(new Date()))) {\r\n            return true;\r\n        }\r\n        if (selectedPerson === \"Jon Snow\" && view === 'month') {\r\n            const formattedDate = format(date, 'yyyy-MM-dd');\r\n            return !availableDates.includes(formattedDate);\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const tileContent = ({ date, view }) => {\r\n        if (view === 'month') {\r\n            const formattedDate = format(date, 'yyyy-MM-dd');\r\n            const meetingExists = meetings.some(meeting => meeting.date === formattedDate);\r\n            if (meetingExists) {\r\n                return <div className=\"dot\"></div>;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const handleReschedule = (meeting) => {\r\n        setSelectedPerson(meeting.person);\r\n        setSelectedDate(new Date(meeting.date));\r\n        setSelectedType(meeting.type);\r\n        setRescheduleMeeting(meeting);\r\n        setShowPrompt(true);\r\n    };\r\n\r\n    const handleCancel = (date) => {\r\n        setMeetings(meetings.filter(meeting => meeting.date !== date));\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-cont\">\r\n            <div className={showPrompt ? 'blurred-background' : ''}></div>\r\n            <div className=\"left-section\">\r\n                <div className=\"meeting-scheduler\">\r\n                    <div className=\"flex-con\">\r\n                        <h2>Meeting Scheduler</h2>\r\n                        <p>Schedule and manage your meetings</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"calendar\">\r\n                    <Calendar\r\n                        onChange={handleDateChange}\r\n                        value={selectedDate}\r\n                        className=\"custom-calendar\"\r\n                        tileDisabled={tileDisabled}\r\n                        tileContent={tileContent}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"upcoming\">\r\n                <div className=\"upcomingMeetingsGrid\">\r\n                    <div className='headerTextUpcoming'>\r\n                        <h2 className='headerUpcoming'>Meetings on {format(selectedDate, 'yyyy-MM-dd')}</h2>\r\n                    </div>\r\n                    {getMeetingsForSelectedDate(selectedDate).slice(0, visibleMeetings[selectedDate] || 2).map((meeting, index) => (\r\n                        <div className='meeting' key={index}>\r\n                            <h3>{meeting.date}</h3>\r\n                            <p>{meeting.person}</p>\r\n                            <p>{meeting.type}</p>\r\n                            <button onClick={() => handleReschedule(meeting)}>Reschedule</button>\r\n                            <button onClick={() => handleCancel(meeting.date)}>Cancel</button>\r\n                        </div>\r\n                    ))}\r\n                    {getMeetingsForSelectedDate(selectedDate).length > 2 && (visibleMeetings[selectedDate] || 2) < getMeetingsForSelectedDate(selectedDate).length && (\r\n                        <button className='loadMoreButton' onClick={() => handleLoadMore(selectedDate)}>\r\n                            <p className='textButton'>Load More</p>\r\n                        </button>\r\n                    )}\r\n                    <button className='scheduleButton' onClick={handleScheduleClick}>\r\n                        <p className='textButton'>Schedule a Meeting</p>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {showPrompt && (\r\n                <div className=\"prompt\">\r\n                    <h2>Schedule a Meeting</h2>\r\n                    <div>\r\n                        <input type=\"radio\" id=\"oneOnOne\" name=\"meetingType\" value=\"One-on-One Meeting\" onChange={handleTypeChange} checked={selectedType === 'One-on-One Meeting'} />\r\n                        <label htmlFor=\"oneOnOne\">One-on-One</label>\r\n                        <input type=\"radio\" id=\"impromptu\" name=\"meetingType\" value=\"Impromptu Meeting\" onChange={handleTypeChange} checked={selectedType === 'Impromptu Meeting'} />\r\n                        <label htmlFor=\"impromptu\">Impromptu</label>\r\n                    </div>\r\n                    <select onChange={handlePersonChange} value={selectedPerson}>\r\n                        <option value=\"\">Select {userType === 'Therapist' ? 'Patient' : 'Therapist'}</option>\r\n                        {userType === 'Therapist' ? mockPatients.map((patient, index) => (\r\n                            <option key={index} value={patient}>{patient}</option>\r\n                        )) : mockTherapists.map((therapist, index) => (\r\n                            <option key={index} value={therapist}>{therapist}</option>\r\n                        ))}\r\n                    </select>\r\n                    {selectedPerson && !allDatesAllowed && (\r\n                        <div>\r\n                            <p>{selectedPerson} is only available on these dates below:</p>\r\n                            <div>\r\n                                {availableDates.map((date, index) => (\r\n                                    <div key={index}>\r\n                                        <input type=\"radio\" id={date} name=\"date\" value={date} onChange={handleDateRadioChange} checked={format(selectedDate, 'yyyy-MM-dd') === date} />\r\n                                        <label htmlFor={date}>{date}</label>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {selectedPerson && allDatesAllowed && (\r\n                        <div>\r\n                            <p>Select any available date:</p>\r\n                            <Calendar\r\n                                onChange={handleDateChange}\r\n                                value={selectedDate}\r\n                                className=\"custom-calendar\"\r\n                                tileDisabled={tileDisabled}\r\n                                tileContent={tileContent}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {rescheduleMeeting ? (\r\n                        <button onClick={handleRescheduleMeeting}>Reschedule Meeting</button>\r\n                    ) : (\r\n                        <button onClick={handleScheduleMeeting}>Schedule a meeting</button>\r\n                    )}\r\n                    <button onClick={handleClosePrompt}>Cancel</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MeetingScheduler;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}